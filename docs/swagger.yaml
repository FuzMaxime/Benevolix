basePath: /api/v1
definitions:
  authentification.LoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dbmodel.AnnonceEntry:
    properties:
      address:
        type: string
      candidature:
        items:
          $ref: '#/definitions/dbmodel.CandidatureEntry'
        type: array
      date:
        type: string
      description:
        type: string
      duration:
        type: integer
      is_remote:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/dbmodel.TagEntry'
        type: array
      tags_id:
        items:
          type: integer
        type: array
      title:
        type: string
    type: object
  dbmodel.CandidatureEntry:
    properties:
      annonce_id:
        type: integer
      date:
        type: string
      status:
        type: string
      user_id:
        type: integer
    type: object
  dbmodel.TagEntry:
    properties:
      annonces:
        items:
          $ref: '#/definitions/dbmodel.AnnonceEntry'
        type: array
      name:
        type: string
      users:
        items:
          $ref: '#/definitions/dbmodel.UserEntry'
        type: array
    type: object
  dbmodel.UserEntry:
    properties:
      bio:
        type: string
      candidature:
        $ref: '#/definitions/dbmodel.CandidatureEntry'
      city:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      tags:
        items:
          $ref: '#/definitions/dbmodel.TagEntry'
        type: array
    type: object
  model.AnnonceRequest:
    properties:
      address:
        type: string
      date:
        type: string
      description:
        type: string
      duration:
        type: integer
      is_remote:
        type: boolean
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
    type: object
  model.AnnonceResponse:
    properties:
      address:
        type: string
      candidatures:
        items:
          $ref: '#/definitions/model.CandidatureResponse'
        type: array
      date:
        type: string
      description:
        type: string
      duration:
        type: integer
      id:
        type: integer
      is_remote:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/model.TagResponse'
        type: array
      title:
        type: string
    type: object
  model.CandidatureRequest:
    properties:
      annonce_id:
        type: integer
      date:
        type: string
      status:
        type: string
      user_id:
        type: integer
    type: object
  model.CandidatureResponse:
    properties:
      annonce:
        type: integer
      date:
        type: string
      id:
        type: integer
      status:
        type: string
      user:
        type: integer
    type: object
  model.TagRequest:
    properties:
      name:
        type: string
    type: object
  model.TagResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.UserRequest:
    properties:
      bio:
        type: string
      city:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  model.UserResponse:
    properties:
      bio:
        type: string
      city:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      tags:
        items:
          $ref: '#/definitions/model.TagResponse'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Benevolix API avec documentation Swagger et framework Chi.
  title: Swagger Benevolix API
  version: "1.0"
paths:
  /annonce:
    post:
      consumes:
      - application/json
      description: Permet de créer une nouvelle annonce
      parameters:
      - description: Annonce request
        in: body
        name: annonce
        required: true
        schema:
          $ref: '#/definitions/model.AnnonceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AnnonceResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Créer une annonce
      tags:
      - Annonce
  /annonces:
    get:
      description: Permet de récupérer toutes les annonces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AnnonceResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer toutes les annonces
      tags:
      - Annonce
  /annonces/{id}:
    delete:
      description: Permet de supprimer une annonce
      parameters:
      - description: Annonce ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Supprimer une annonce
      tags:
      - Annonce
    get:
      description: Permet de récupérer une annonce par son ID
      parameters:
      - description: Annonce ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AnnonceResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer une annonce par son ID
      tags:
      - Annonce
    put:
      consumes:
      - application/json
      description: Permet de mettre à jour une annonce
      parameters:
      - description: Annonce ID
        in: path
        name: id
        required: true
        type: integer
      - description: Annonce request
        in: body
        name: annonce
        required: true
        schema:
          $ref: '#/definitions/model.AnnonceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AnnonceResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mettre à jour une annonce
      tags:
      - Annonce
  /candidature:
    post:
      consumes:
      - application/json
      description: Permet de créer une nouvelle candidature
      parameters:
      - description: Candidature request
        in: body
        name: candidature
        required: true
        schema:
          $ref: '#/definitions/model.CandidatureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.CandidatureEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Créer une candidature
      tags:
      - Candidature
  /candidatures:
    get:
      description: Permet de récupérer toutes les candidatures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dbmodel.CandidatureEntry'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer toutes les candidatures
      tags:
      - Candidature
  /candidatures/{id}:
    delete:
      description: Permet de supprimer une candidature
      parameters:
      - description: Candidature ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Supprimer une candidature
      tags:
      - Candidature
    get:
      description: Permet de récupérer une candidature par son ID
      parameters:
      - description: Candidature ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.CandidatureEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer une candidature par son ID
      tags:
      - Candidature
    put:
      consumes:
      - application/json
      description: Permet de mettre à jour une candidature
      parameters:
      - description: Candidature ID
        in: path
        name: id
        required: true
        type: integer
      - description: Candidature request
        in: body
        name: candidature
        required: true
        schema:
          $ref: '#/definitions/model.CandidatureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.CandidatureEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mettre à jour une candidature
      tags:
      - Candidature
  /login:
    post:
      consumes:
      - application/json
      description: Permet à un utilisateur de se connecter avec ses identifiants.
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authentification.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Connexion de l'utilisateur
      tags:
      - Authentification
  /tags:
    get:
      description: Permet de récupérer tous les tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dbmodel.TagEntry'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer tous les tags
      tags:
      - Tag
    post:
      consumes:
      - application/json
      description: Permet de créer un nouveau tag
      parameters:
      - description: Tag request
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/model.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.TagEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Créer un tag
      tags:
      - Tag
  /tags/{id}:
    delete:
      description: Permet de supprimer un tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Supprimer un tag
      tags:
      - Tag
    get:
      description: Permet de récupérer un tag par son ID
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.TagEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer un tag par son ID
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Permet de mettre à jour un tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tag request
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/model.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.TagEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mettre à jour un tag
      tags:
      - Tag
  /user:
    post:
      consumes:
      - application/json
      description: Permet de créer un nouvel utilisateur
      parameters:
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Créer un utilisateur
      tags:
      - User
  /users:
    get:
      description: Permet de récupérer tous les utilisateurs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dbmodel.UserEntry'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer tous les utilisateurs
      tags:
      - User
  /users/{id}:
    delete:
      description: Permet de supprimer un utilisateur
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Supprimer un utilisateur
      tags:
      - User
    get:
      description: Permet de récupérer un utilisateur par son ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dbmodel.UserEntry'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Récupérer un utilisateur par son ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Permet de mettre à jour un utilisateur
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mettre à jour un utilisateur
      tags:
      - User
swagger: "2.0"
